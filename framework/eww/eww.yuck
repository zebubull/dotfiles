(defpoll song :interval "1s" `./music_info --song`)
(defpoll artist :interval "1s" `./music_info --artist`)
(defpoll status :interval "1s" `./music_info --status`)
(defpoll musictime :interval "1s" `./music_info --time`)
(defpoll cover :interval "1s" `./music_info --cover`)
(defpoll ctime :interval "1s" `./music_info --ctime`)
(defpoll ttime :interval "1s" `./music_info --ttime`)

(defpoll shuffle :interval "1s" `mpc status | grep --color=never "random" | awk '{ print $6}'`)
(defpoll repeat :interval "1s" `mpc status | grep --color=never "repeat" | awk '{ print $4}'`)
(defpoll single :interval "1s" `mpc status | grep --color=never "repeat" | awk '{ print $8}'`)
(defpoll song_progress :interval "1s" `mpc | grep --color=never "playing" | awk '{print $3}'`)

(defwidget volum []
	(eventbox :onhover "${EWW_CMD} update volum=true" 		
			  :onhoverlost "${EWW_CMD} update volum=false"
	(box      :orientation "h" 	  
			  :space-evenly "false" 
              :valign "center"
			  :spacing "2"
	(button :class "volume-icon" "")
	(scale    :class "volbar" 	  
			  :value current-volume 
			  :orientation "h"      
			  :flipped false 
			  :max 105 
			  :min 0 
			  :onchange "mpc volume {}" ))))
(defpoll current-volume :interval "1s" `mpc volume | gawk '{print $1}' FPAT='[0-9]+'`)
(defvar volum false)

(defwidget music [] 
	(box :class "music" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false" 
		(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${cover}');")
		(box :orientation "v" :spacing 12 :space-evenly "false" :vexpand "false" :hexpand "true" 
			(label :halign "center" :class "song" :wrap "true" :limit-width 90 :text song)
			(label :halign "center" :class "artist" :wrap "true" :limit-width 70 :text artist)
			(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "true" 
				(button :class "prev" :onclick "./music_info --prev" "󰼨")
				(button :class "play" :onclick "./music_info --toggle" status)
				(button :class "next" :onclick "./music_info --next" "󰼧"))
			(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" 
				(scale :min 0 :active "true" :max 100 :value musictime :onchange `mpc seek {}%`))
            (label :halign "center" :class "song_progress" :text song_progress )
            (box :orientation "h" :halign "center" :space-evenly true :vexpand "false" :hexpand "false" 
              (volum)
              (button :class "shuffle ${shuffle}" :onclick `mpc random` "${shuffle == "on" ? "󰒟" : "󰒞"}")
              (button :class "repeat ${repeat}" :onclick `mpc repeat` "${repeat == "on" ? "󰑖" : "󰑗"}")
              (button :class "single ${single}" :onclick `mpc single` "󰑘"))
        )))

(defwindow dash
  :monitor 0
  :geometry (geometry :x "8px" :y "0px" :height "20%" :width "35%" :anchor "center")
  :focusable false
  :exclusive false
  :stacking "fg"
  (box :class "dash" :orientation "v" 
    :space-evenly false
    (music)
    ))
